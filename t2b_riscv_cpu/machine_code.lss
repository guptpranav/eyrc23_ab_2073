
.temp.file.elf:     file format elf32-littleriscv

SYMBOL TABLE:
00000000 l    d  .init	00000000 .init
00000054 l    d  .text	00000000 .text
02000000 l    d  .data	00000000 .data
02000000 l    d  .bss	00000000 .bss
02000000 l    d  .stack	00000000 .stack
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    df *ABS*	00000000 tls.c
00000000 l    df *ABS*	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
000001fc l       .debug_info	00000000 
00000000 g       *ABS*	00000000 __data_size
02000800 g       .data	00000000 __global_pointer$
02000000 g       .bss	00000000 __tls_base
00000800 g       *ABS*	00000000 __flash_size
00000040 g       *ABS*	00000000 __stack_size
00000000 g       *ABS*	00000000 __bss_size
00000594 g     F .text	00000024 memcpy
02000000 g       .bss	00000000 __bss_end
00000000 g       *ABS*	00000000 __tbss_size
0000058c g     F .text	00000008 _set_tls
00000000 g     F .init	00000000 _start
02000000 g       *ABS*	00000000 __ram
02000000 g       .bss	00000000 __data_end
000001fc  w      .debug_info	00000000 .hidden t1b_path_planner.c.838ff56c
000005d4 g       .text	00000000 __text_end
02000000 g       .bss	00000000 __bss_start
000005b8 g     F .text	0000001c memset
00000054 g     F .text	00000538 main
00000100 g       *ABS*	00000000 __ram_size
02000100 g       .init	00000000 __stack
00000000 g     F *ABS*	00000000 vfscanf
000005d8 g       *ABS*	00000000 __data_source
00000000 g       *ABS*	00000000 __flash
02000000 g       .data	00000000 __data_start
00000000 g     F *ABS*	00000000 vfprintf



Disassembly of section .init:

00000000 <_start>:
   0:	    02000117          	auipc	x2,0x2000
   4:	    10010113          	addi	x2,x2,256 # 2000100 <__stack>
   8:	    02000197          	auipc	x3,0x2000
   c:	    7f818193          	addi	x3,x3,2040 # 2000800 <__global_pointer$>
  10:	    02000517          	auipc	x10,0x2000
  14:	    ff050513          	addi	x10,x10,-16 # 2000000 <__bss_end>
  18:	    5d800593          	addi	x11,x0,1496
  1c:	    00000613          	addi	x12,x0,0
  20:	    574000ef          	jal	x1,594 <memcpy>
  24:	    02000517          	auipc	x10,0x2000
  28:	    fdc50513          	addi	x10,x10,-36 # 2000000 <__bss_end>
  2c:	    00000593          	addi	x11,x0,0
  30:	    00000613          	addi	x12,x0,0
  34:	    584000ef          	jal	x1,5b8 <memset>
  38:	    02000517          	auipc	x10,0x2000
  3c:	    fc850513          	addi	x10,x10,-56 # 2000000 <__bss_end>
  40:	    54c000ef          	jal	x1,58c <_set_tls>
  44:	    00000513          	addi	x10,x0,0
  48:	    00000593          	addi	x11,x0,0
  4c:	    008000ef          	jal	x1,54 <main>
  50:	/-- 0000006f          	jal	x0,50 <__stack_size+0x10>

Disassembly of section .text:

00000054 <main>:
     ###         _put_byte('\n');
     ### 
     ### */
     ### 
     ### // main function
     ### int main(int argc, char const *argv[]) {
  54:	                            f1010113          	addi	x2,x2,-240
  58:	                            0f212023          	sw	x18,224(x2)
  5c:	                            0e112623          	sw	x1,236(x2)
  60:	                            0e812423          	sw	x8,232(x2)
  64:	                            0e912223          	sw	x9,228(x2)
  68:	                            0d312e23          	sw	x19,220(x2)
     ###     // index to keep track of the path_planned array
     ###     uint8_t idx = 0;
     ### 
     ###     // ############# Add your code here #############
     ### 
     ###     if(START_POINT == END_POINT){
  6c:	                            02000937          	lui	x18,0x2000
  70:	                            00094703          	lbu	x14,0(x18) # 2000000 <__bss_end>
  74:	                            00494783          	lbu	x15,4(x18)
     ### int main(int argc, char const *argv[]) {
  78:	                            fffff337          	lui	x6,0xfffff
     ###     if(START_POINT == END_POINT){
  7c:	                            0ff77713          	andi	x14,x14,255
  80:	                            0ff7f793          	andi	x15,x15,255
     ### int main(int argc, char const *argv[]) {
  84:	                            00610133          	add	x2,x2,x6
     ###     if(START_POINT == END_POINT){
  88:	                        /-- 08f71463          	bne	x14,x15,110 <__ram_size+0x10>
     ###         path_planned[0]=START_POINT;
  8c:	                        |   000016b7          	lui	x13,0x1
  90:	                        |   00094783          	lbu	x15,0(x18)
  94:	                        |   0c068693          	addi	x13,x13,192 # 10c0 <__flash_size+0x8c0>
  98:	                        |   01010613          	addi	x12,x2,16
  9c:	                        |   fffff737          	lui	x14,0xfffff
  a0:	                        |   00c686b3          	add	x13,x13,x12
  a4:	                        |   00e68733          	add	x14,x13,x14
  a8:	                        |   00e12623          	sw	x14,12(x2)
  ac:	                        |   f4f70423          	sb	x15,-184(x14) # ffffef48 <__global_pointer$+0xfdffe748>
     ###         idx=1;
  b0:	                        |   00100713          	addi	x14,x0,1
     ### 
     ###     // ##############################################
     ### 
     ###     // the node values are written into data memory sequentially.
     ###     for (int i = 0; i < idx; ++i) {
     ###         NODE_POINT = path_planned[i];
  b4:	      /-----------------|-> 00001637          	lui	x12,0x1
  b8:	      |                 |   fffff7b7          	lui	x15,0xfffff
  bc:	      |                 |   0c060613          	addi	x12,x12,192 # 10c0 <__flash_size+0x8c0>
  c0:	      |                 |   01010593          	addi	x11,x2,16
  c4:	      |                 |   00b60633          	add	x12,x12,x11
  c8:	      |                 |   f4878793          	addi	x15,x15,-184 # ffffef48 <__global_pointer$+0xfdffe748>
  cc:	      |                 |   00f607b3          	add	x15,x12,x15
     ###     for (int i = 0; i < idx; ++i) {
  d0:	      |                 |   00000693          	addi	x13,x0,0
     ###         NODE_POINT = path_planned[i];
  d4:	      |                 |   02000637          	lui	x12,0x2000
     ###     for (int i = 0; i < idx; ++i) {
  d8:	/--/--|-----------------|-X 4ae6c063          	blt	x13,x14,578 <t1b_path_planner.c.838ff56c+0x37c>
     ###     }
     ###     // Path Planning Computation Done Flag
     ###     CPU_DONE = 1;
  dc:	|  |  |                 |   020007b7          	lui	x15,0x2000
  e0:	|  |  |                 |   00100713          	addi	x14,x0,1
  e4:	|  |  |                 |   00e78623          	sb	x14,12(x15) # 200000c <__bss_end+0xc>
     ###         _put_str("################################\n");
     ### 
     ###     #endif
     ### 
     ###     return 0;
     ### }
  e8:	|  |  |                 |   00001337          	lui	x6,0x1
  ec:	|  |  |                 |   00610133          	add	x2,x2,x6
  f0:	|  |  |                 |   0ec12083          	lw	x1,236(x2)
  f4:	|  |  |                 |   0e812403          	lw	x8,232(x2)
  f8:	|  |  |                 |   0e412483          	lw	x9,228(x2)
  fc:	|  |  |                 |   0e012903          	lw	x18,224(x2)
 100:	|  |  |                 |   0dc12983          	lw	x19,220(x2)
 104:	|  |  |                 |   00000513          	addi	x10,x0,0
 108:	|  |  |                 |   0f010113          	addi	x2,x2,240
 10c:	|  |  |                 |   00008067          	jalr	x0,0(x1)
     ###         int adj[30][30]={{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
 110:	|  |  |                 \-> 000019b7          	lui	x19,0x1
 114:	|  |  |                     01010713          	addi	x14,x2,16
 118:	|  |  |                     0c098793          	addi	x15,x19,192 # 10c0 <__flash_size+0x8c0>
 11c:	|  |  |                     00e787b3          	add	x15,x15,x14
 120:	|  |  |                     fffff4b7          	lui	x9,0xfffff
 124:	|  |  |                     00978433          	add	x8,x15,x9
 128:	|  |  |                     00001637          	lui	x12,0x1
 12c:	|  |  |                     e1060613          	addi	x12,x12,-496 # e10 <__flash_size+0x610>
 130:	|  |  |                     00000593          	addi	x11,x0,0
 134:	|  |  |                     1f040513          	addi	x10,x8,496
 138:	|  |  |                     480000ef          	jal	x1,5b8 <memset>
 13c:	|  |  |                     01010693          	addi	x13,x2,16
 140:	|  |  |                     8f898713          	addi	x14,x19,-1800
 144:	|  |  |                     00100793          	addi	x15,x0,1
 148:	|  |  |                     00d70733          	add	x14,x14,x13
 14c:	|  |  |                     00f72023          	sw	x15,0(x14)
 150:	|  |  |                     90098713          	addi	x14,x19,-1792
 154:	|  |  |                     00d70733          	add	x14,x14,x13
 158:	|  |  |                     00f72023          	sw	x15,0(x14)
 15c:	|  |  |                     97498713          	addi	x14,x19,-1676
 160:	|  |  |                     00d70733          	add	x14,x14,x13
 164:	|  |  |                     1ef42a23          	sw	x15,500(x8)
 168:	|  |  |                     26f42423          	sw	x15,616(x8)
 16c:	|  |  |                     26f42823          	sw	x15,624(x8)
 170:	|  |  |                     2cf42e23          	sw	x15,732(x8)
 174:	|  |  |                     2ef42223          	sw	x15,740(x8)
 178:	|  |  |                     2ef42623          	sw	x15,748(x8)
 17c:	|  |  |                     30f42023          	sw	x15,768(x8)
 180:	|  |  |                     36f42023          	sw	x15,864(x8)
 184:	|  |  |                     36f42423          	sw	x15,872(x8)
 188:	|  |  |                     3cf42423          	sw	x15,968(x8)
 18c:	|  |  |                     3cf42e23          	sw	x15,988(x8)
 190:	|  |  |                     3ef42223          	sw	x15,996(x8)
 194:	|  |  |                     3ef42423          	sw	x15,1000(x8)
 198:	|  |  |                     44f42c23          	sw	x15,1112(x8)
 19c:	|  |  |                     4cf42823          	sw	x15,1232(x8)
 1a0:	|  |  |                     4cf42e23          	sw	x15,1244(x8)
 1a4:	|  |  |                     54f42823          	sw	x15,1360(x8)
 1a8:	|  |  |                     54f42c23          	sw	x15,1368(x8)
 1ac:	|  |  |                     5af42c23          	sw	x15,1464(x8)
 1b0:	|  |  |                     5cf42623          	sw	x15,1484(x8)
 1b4:	|  |  |                     5cf42a23          	sw	x15,1492(x8)
 1b8:	|  |  |                     5ef42023          	sw	x15,1504(x8)
 1bc:	|  |  |                     64f42423          	sw	x15,1608(x8)
 1c0:	|  |  |                     64f42823          	sw	x15,1616(x8)
 1c4:	|  |  |                     64f42a23          	sw	x15,1620(x8)
 1c8:	|  |  |                     6cf42223          	sw	x15,1732(x8)
 1cc:	|  |  |                     72f42e23          	sw	x15,1852(x8)
 1d0:	|  |  |                     7af42823          	sw	x15,1968(x8)
 1d4:	|  |  |                     7cf42223          	sw	x15,1988(x8)
 1d8:	|  |  |                     7cf42e23          	sw	x15,2012(x8)
 1dc:	|  |  |                     00f72023          	sw	x15,0(x14)
 1e0:	|  |  |                     97c98713          	addi	x14,x19,-1668
 1e4:	|  |  |                     00d70733          	add	x14,x14,x13
 1e8:	|  |  |                     00f72023          	sw	x15,0(x14)
 1ec:	|  |  |                     98098713          	addi	x14,x19,-1664
 1f0:	|  |  |                     00d70733          	add	x14,x14,x13
 1f4:	|  |  |                     00f72023          	sw	x15,0(x14)
 1f8:	|  |  |                     9f098713          	addi	x14,x19,-1552
 1fc:	|  |  |                     00d70733          	add	x14,x14,x13
 200:	|  |  |                     00f72023          	sw	x15,0(x14)
 204:	|  |  |                     a6898713          	addi	x14,x19,-1432
 208:	|  |  |                     00d70733          	add	x14,x14,x13
 20c:	|  |  |                     00f72023          	sw	x15,0(x14)
 210:	|  |  |                     a7498713          	addi	x14,x19,-1420
 214:	|  |  |                     00d70733          	add	x14,x14,x13
 218:	|  |  |                     00f72023          	sw	x15,0(x14)
 21c:	|  |  |                     a7898713          	addi	x14,x19,-1416
 220:	|  |  |                     00d70733          	add	x14,x14,x13
 224:	|  |  |                     00f72023          	sw	x15,0(x14)
 228:	|  |  |                     ae898713          	addi	x14,x19,-1304
 22c:	|  |  |                     00d70733          	add	x14,x14,x13
 230:	|  |  |                     00f72023          	sw	x15,0(x14)
 234:	|  |  |                     b6098713          	addi	x14,x19,-1184
 238:	|  |  |                     00d70733          	add	x14,x14,x13
 23c:	|  |  |                     00f72023          	sw	x15,0(x14)
 240:	|  |  |                     b6c98713          	addi	x14,x19,-1172
 244:	|  |  |                     00d70733          	add	x14,x14,x13
 248:	|  |  |                     00f72023          	sw	x15,0(x14)
 24c:	|  |  |                     bc898713          	addi	x14,x19,-1080
 250:	|  |  |                     00d70733          	add	x14,x14,x13
 254:	|  |  |                     00f72023          	sw	x15,0(x14)
 258:	|  |  |                     be098713          	addi	x14,x19,-1056
 25c:	|  |  |                     00d70733          	add	x14,x14,x13
 260:	|  |  |                     00f72023          	sw	x15,0(x14)
 264:	|  |  |                     be898713          	addi	x14,x19,-1048
 268:	|  |  |                     00d70733          	add	x14,x14,x13
 26c:	|  |  |                     00f72023          	sw	x15,0(x14)
 270:	|  |  |                     c5c98713          	addi	x14,x19,-932
 274:	|  |  |                     00d70733          	add	x14,x14,x13
 278:	|  |  |                     00f72023          	sw	x15,0(x14)
 27c:	|  |  |                     c6498713          	addi	x14,x19,-924
 280:	|  |  |                     00d70733          	add	x14,x14,x13
 284:	|  |  |                     00f72023          	sw	x15,0(x14)
 288:	|  |  |                     c7098713          	addi	x14,x19,-912
 28c:	|  |  |                     00d70733          	add	x14,x14,x13
 290:	|  |  |                     00f72023          	sw	x15,0(x14)
 294:	|  |  |                     cd898713          	addi	x14,x19,-808
 298:	|  |  |                     00d70733          	add	x14,x14,x13
 29c:	|  |  |                     00f72023          	sw	x15,0(x14)
 2a0:	|  |  |                     ce098713          	addi	x14,x19,-800
 2a4:	|  |  |                     00d70733          	add	x14,x14,x13
 2a8:	|  |  |                     00f72023          	sw	x15,0(x14)
 2ac:	|  |  |                     ce498713          	addi	x14,x19,-796
 2b0:	|  |  |                     00d70733          	add	x14,x14,x13
 2b4:	|  |  |                     00f72023          	sw	x15,0(x14)
 2b8:	|  |  |                     d5498713          	addi	x14,x19,-684
 2bc:	|  |  |                     00d70733          	add	x14,x14,x13
 2c0:	|  |  |                     00f72023          	sw	x15,0(x14)
 2c4:	|  |  |                     dcc98713          	addi	x14,x19,-564
 2c8:	|  |  |                     00d70733          	add	x14,x14,x13
 2cc:	|  |  |                     00f72023          	sw	x15,0(x14)
 2d0:	|  |  |                     e4098713          	addi	x14,x19,-448
 2d4:	|  |  |                     00d70733          	add	x14,x14,x13
 2d8:	|  |  |                     00f72023          	sw	x15,0(x14)
 2dc:	|  |  |                     e5498713          	addi	x14,x19,-428
 2e0:	|  |  |                     00d70733          	add	x14,x14,x13
 2e4:	|  |  |                     00f72023          	sw	x15,0(x14)
 2e8:	|  |  |                     ec898713          	addi	x14,x19,-312
 2ec:	|  |  |                     00d70733          	add	x14,x14,x13
 2f0:	|  |  |                     00f72023          	sw	x15,0(x14)
 2f4:	|  |  |                     ed098713          	addi	x14,x19,-304
 2f8:	|  |  |                     00d70733          	add	x14,x14,x13
 2fc:	|  |  |                     00f72023          	sw	x15,0(x14)
 300:	|  |  |                     f4498713          	addi	x14,x19,-188
 304:	|  |  |                     00d70733          	add	x14,x14,x13
 308:	|  |  |                     00f72023          	sw	x15,0(x14)
 30c:	|  |  |                     f4c98713          	addi	x14,x19,-180
 310:	|  |  |                     00d70733          	add	x14,x14,x13
 314:	|  |  |                     00f72023          	sw	x15,0(x14)
 318:	|  |  |                     f5098713          	addi	x14,x19,-176
 31c:	|  |  |                     00d70733          	add	x14,x14,x13
 320:	|  |  |                     00f72023          	sw	x15,0(x14)
 324:	|  |  |                     fc098713          	addi	x14,x19,-64
 328:	|  |  |                     00d70733          	add	x14,x14,x13
 32c:	|  |  |                     00f72023          	sw	x15,0(x14)
 330:	|  |  |                     fdc98713          	addi	x14,x19,-36
 334:	|  |  |                     00d70733          	add	x14,x14,x13
 338:	|  |  |                     00f72023          	sw	x15,0(x14)
 33c:	|  |  |                     03898713          	addi	x14,x19,56
 340:	|  |  |                     00d70733          	add	x14,x14,x13
 344:	|  |  |                     00f72023          	sw	x15,0(x14)
 348:	|  |  |                     04498713          	addi	x14,x19,68
 34c:	|  |  |                     00d70733          	add	x14,x14,x13
 350:	|  |  |                     00f72023          	sw	x15,0(x14)
 354:	|  |  |                     04c98713          	addi	x14,x19,76
 358:	|  |  |                     00d70733          	add	x14,x14,x13
 35c:	|  |  |                     00f72023          	sw	x15,0(x14)
 360:	|  |  |                     09898713          	addi	x14,x19,152
 364:	|  |  |                     00d70733          	add	x14,x14,x13
 368:	|  |  |                     00f72023          	sw	x15,0(x14)
 36c:	|  |  |                     0b898713          	addi	x14,x19,184
 370:	|  |  |                     00d70733          	add	x14,x14,x13
 374:	|  |  |                     00f72023          	sw	x15,0(x14)
     ###         int q[100];for (int i=0;i<100;i++){q[i]=-1;}
 378:	|  |  |                     0c098793          	addi	x15,x19,192
 37c:	|  |  |                     00d787b3          	add	x15,x15,x13
 380:	|  |  |                     06048513          	addi	x10,x9,96 # fffff060 <__global_pointer$+0xfdffe860>
 384:	|  |  |                     19000613          	addi	x12,x0,400
 388:	|  |  |                     0ff00593          	addi	x11,x0,255
 38c:	|  |  |                     00a78533          	add	x10,x15,x10
 390:	|  |  |                     228000ef          	jal	x1,5b8 <memset>
     ###         int path_to[30];for (int i=0;i<30;i++){path_to[i]=-1;}
 394:	|  |  |                     01010713          	addi	x14,x2,16
 398:	|  |  |                     0c098793          	addi	x15,x19,192
 39c:	|  |  |                     00e787b3          	add	x15,x15,x14
 3a0:	|  |  |                     f6848513          	addi	x10,x9,-152
 3a4:	|  |  |                     0ff00593          	addi	x11,x0,255
 3a8:	|  |  |                     00a78533          	add	x10,x15,x10
 3ac:	|  |  |                     07800613          	addi	x12,x0,120
 3b0:	|  |  |                     208000ef          	jal	x1,5b8 <memset>
     ###         q[0]=START_POINT;
 3b4:	|  |  |                     00094783          	lbu	x15,0(x18)
     ###         int index=0; int curr_add=1;
 3b8:	|  |  |                     00000693          	addi	x13,x0,0
     ###                 for(int i=0;i<30;i++){
 3bc:	|  |  |                     00000713          	addi	x14,x0,0
     ###         q[0]=START_POINT;
 3c0:	|  |  |                     0ff7f793          	andi	x15,x15,255
 3c4:	|  |  |                     06f42023          	sw	x15,96(x8)
     ###         int index=0; int curr_add=1;
 3c8:	|  |  |                     00100593          	addi	x11,x0,1
     ###                     if(adj[q[index]][i]==1 && path_to[i]==-1 && i!=START_POINT){
 3cc:	|  |  |                     00100893          	addi	x17,x0,1
 3d0:	|  |  |                     fff00e13          	addi	x28,x0,-1
 3d4:	|  |  |                     02000837          	lui	x16,0x2000
     ###                 for(int i=0;i<30;i++){
 3d8:	|  |  |                     01e00313          	addi	x6,x0,30
     ###         while(index<100 && q[index]>=0){
 3dc:	|  |  |                     06400e93          	addi	x29,x0,100
     ###                     if(adj[q[index]][i]==1 && path_to[i]==-1 && i!=START_POINT){
 3e0:	|  |  |  /----------------> 00269613          	slli	x12,x13,0x2
 3e4:	|  |  |  |                  00c40633          	add	x12,x8,x12
 3e8:	|  |  |  |                  06062503          	lw	x10,96(x12)
 3ec:	|  |  |  |                  00451793          	slli	x15,x10,0x4
 3f0:	|  |  |  |                  40a787b3          	sub	x15,x15,x10
 3f4:	|  |  |  |                  00179793          	slli	x15,x15,0x1
 3f8:	|  |  |  |                  00e787b3          	add	x15,x15,x14
 3fc:	|  |  |  |                  00279793          	slli	x15,x15,0x2
 400:	|  |  |  |                  00f407b3          	add	x15,x8,x15
 404:	|  |  |  |                  1f07a783          	lw	x15,496(x15)
 408:	|  |  |  |              /-- 03179c63          	bne	x15,x17,440 <t1b_path_planner.c.838ff56c+0x244>
 40c:	|  |  |  |              |   00271793          	slli	x15,x14,0x2
 410:	|  |  |  |              |   00f407b3          	add	x15,x8,x15
 414:	|  |  |  |              |   f687a503          	lw	x10,-152(x15)
 418:	|  |  |  |              +-- 03c51463          	bne	x10,x28,440 <t1b_path_planner.c.838ff56c+0x244>
 41c:	|  |  |  |              |   00084503          	lbu	x10,0(x16) # 2000000 <__bss_end>
 420:	|  |  |  |              |   0ff57513          	andi	x10,x10,255
 424:	|  |  |  |              +-- 00e50e63          	beq	x10,x14,440 <t1b_path_planner.c.838ff56c+0x244>
     ###                         q[curr_add++]=i;
 428:	|  |  |  |              |   00259513          	slli	x10,x11,0x2
 42c:	|  |  |  |              |   00a40533          	add	x10,x8,x10
 430:	|  |  |  |              |   06e52023          	sw	x14,96(x10)
     ###                         path_to[i]=q[index];
 434:	|  |  |  |              |   06062603          	lw	x12,96(x12)
     ###                         q[curr_add++]=i;
 438:	|  |  |  |              |   00158593          	addi	x11,x11,1
     ###                         path_to[i]=q[index];
 43c:	|  |  |  |              |   f6c7a423          	sw	x12,-152(x15)
     ###                 for(int i=0;i<30;i++){
 440:	|  |  |  |              \-> 00170713          	addi	x14,x14,1
 444:	|  |  |  +----------------- f8671ee3          	bne	x14,x6,3e0 <t1b_path_planner.c.838ff56c+0x1e4>
     ###                 if(path_to[END_POINT]>=0){break;}
 448:	|  |  |  |                  00484783          	lbu	x15,4(x16)
 44c:	|  |  |  |                  0ff7f793          	andi	x15,x15,255
 450:	|  |  |  |                  00279793          	slli	x15,x15,0x2
 454:	|  |  |  |                  00f407b3          	add	x15,x8,x15
 458:	|  |  |  |                  f687a783          	lw	x15,-152(x15)
 45c:	|  |  |  |              /-- 0007de63          	bge	x15,x0,478 <t1b_path_planner.c.838ff56c+0x27c>
     ###                 index++;
 460:	|  |  |  |              |   00168693          	addi	x13,x13,1
     ###         while(index<100 && q[index]>=0){
 464:	|  |  |  |              +-- 01d68a63          	beq	x13,x29,478 <t1b_path_planner.c.838ff56c+0x27c>
 468:	|  |  |  |              |   00269793          	slli	x15,x13,0x2
 46c:	|  |  |  |              |   00f407b3          	add	x15,x8,x15
 470:	|  |  |  |              |   0607a783          	lw	x15,96(x15)
 474:	|  |  |  |  /-----------|-- 0e07d063          	bge	x15,x0,554 <t1b_path_planner.c.838ff56c+0x358>
     ###         if(path_to[END_POINT]!=-1){
 478:	|  |  |  |  |           \-> 020004b7          	lui	x9,0x2000
 47c:	|  |  |  |  |               0044c703          	lbu	x14,4(x9) # 2000004 <__bss_end+0x4>
 480:	|  |  |  |  |               000015b7          	lui	x11,0x1
 484:	|  |  |  |  |               01010613          	addi	x12,x2,16
 488:	|  |  |  |  |               0c058693          	addi	x13,x11,192 # 10c0 <__flash_size+0x8c0>
 48c:	|  |  |  |  |               00c686b3          	add	x13,x13,x12
 490:	|  |  |  |  |               0ff77713          	andi	x14,x14,255
 494:	|  |  |  |  |               fffff7b7          	lui	x15,0xfffff
 498:	|  |  |  |  |               00f68433          	add	x8,x13,x15
 49c:	|  |  |  |  |               00271713          	slli	x14,x14,0x2
 4a0:	|  |  |  |  |               00e40733          	add	x14,x8,x14
 4a4:	|  |  |  |  |               f6872603          	lw	x12,-152(x14)
 4a8:	|  |  |  |  |               fff00693          	addi	x13,x0,-1
     ###     uint8_t idx = 0;
 4ac:	|  |  |  |  |               00000713          	addi	x14,x0,0
     ###         if(path_to[END_POINT]!=-1){
 4b0:	|  |  +--|--|-------------- c0d602e3          	beq	x12,x13,b4 <main+0x60>
     ###             int rev_path[32];for (int i=0;i<32;i++){rev_path[i]=-1;}
 4b4:	|  |  |  |  |               01010693          	addi	x13,x2,16
 4b8:	|  |  |  |  |               0c058713          	addi	x14,x11,192
 4bc:	|  |  |  |  |               00d70733          	add	x14,x14,x13
 4c0:	|  |  |  |  |               fe078793          	addi	x15,x15,-32 # ffffefe0 <__global_pointer$+0xfdffe7e0>
 4c4:	|  |  |  |  |               00f707b3          	add	x15,x14,x15
 4c8:	|  |  |  |  |               0ff00593          	addi	x11,x0,255
 4cc:	|  |  |  |  |               00078513          	addi	x10,x15,0
 4d0:	|  |  |  |  |               08000613          	addi	x12,x0,128
 4d4:	|  |  |  |  |               0e4000ef          	jal	x1,5b8 <memset>
     ###             int a=END_POINT,lol=0,lol2=0;
 4d8:	|  |  |  |  |               0044c703          	lbu	x14,4(x9)
     ###             int rev_path[32];for (int i=0;i<32;i++){rev_path[i]=-1;}
 4dc:	|  |  |  |  |               00050793          	addi	x15,x10,0
     ###             int a=END_POINT,lol=0,lol2=0;
 4e0:	|  |  |  |  |               00050593          	addi	x11,x10,0
 4e4:	|  |  |  |  |               0ff77713          	andi	x14,x14,255
 4e8:	|  |  |  |  |               00000693          	addi	x13,x0,0
     ###             while(a!=START_POINT){
 4ec:	|  |  |  |  |               02000837          	lui	x16,0x2000
 4f0:	|  |  |  |  |  /----------> 00084603          	lbu	x12,0(x16) # 2000000 <__bss_end>
 4f4:	|  |  |  |  |  |            0ff67613          	andi	x12,x12,255
 4f8:	|  |  |  |  |  |  /-------- 06e61263          	bne	x12,x14,55c <t1b_path_planner.c.838ff56c+0x360>
     ###             rev_path[lol]=a;
 4fc:	|  |  |  |  |  |  |         00001537          	lui	x10,0x1
 500:	|  |  |  |  |  |  |         0c050513          	addi	x10,x10,192 # 10c0 <__flash_size+0x8c0>
 504:	|  |  |  |  |  |  |         01010813          	addi	x16,x2,16
 508:	|  |  |  |  |  |  |         fffff637          	lui	x12,0xfffff
 50c:	|  |  |  |  |  |  |         01050533          	add	x10,x10,x16
 510:	|  |  |  |  |  |  |         00c50633          	add	x12,x10,x12
 514:	|  |  |  |  |  |  |         00269693          	slli	x13,x13,0x2
 518:	|  |  |  |  |  |  |         00d606b3          	add	x13,x12,x13
 51c:	|  |  |  |  |  |  |         fee6a023          	sw	x14,-32(x13)
     ###             for(int i=31;i>=0;i--){
 520:	|  |  |  |  |  |  |         f8078793          	addi	x15,x15,-128
     ###             int a=END_POINT,lol=0,lol2=0;
 524:	|  |  |  |  |  |  |         00000693          	addi	x13,x0,0
     ###     uint8_t idx = 0;
 528:	|  |  |  |  |  |  |         00000713          	addi	x14,x0,0
     ###                 if(rev_path[i]>-1){
 52c:	|  |  |  |  |  |  |  /----> 07c5a503          	lw	x10,124(x11)
 530:	|  |  |  |  |  |  |  |  /-- 00054c63          	blt	x10,x0,548 <t1b_path_planner.c.838ff56c+0x34c>
     ###                     path_planned[lol2++]=rev_path[i];
 534:	|  |  |  |  |  |  |  |  |   00d60833          	add	x16,x12,x13
     ###                     idx++;
 538:	|  |  |  |  |  |  |  |  |   00170713          	addi	x14,x14,1
     ###                     path_planned[lol2++]=rev_path[i];
 53c:	|  |  |  |  |  |  |  |  |   f4a80423          	sb	x10,-184(x16)
     ###                     idx++;
 540:	|  |  |  |  |  |  |  |  |   0ff77713          	andi	x14,x14,255
     ###                     path_planned[lol2++]=rev_path[i];
 544:	|  |  |  |  |  |  |  |  |   00168693          	addi	x13,x13,1
     ###             for(int i=31;i>=0;i--){
 548:	|  |  |  |  |  |  |  |  \-> ffc58593          	addi	x11,x11,-4
 54c:	|  |  |  |  |  |  |  \----- fef590e3          	bne	x11,x15,52c <t1b_path_planner.c.838ff56c+0x330>
 550:	|  |  \--|--|--|--|-------- b65ff06f          	jal	x0,b4 <main+0x60>
     ###                 for(int i=0;i<30;i++){
 554:	|  |     |  \--|--|-------> 00000713          	addi	x14,x0,0
 558:	|  |     \-----|--|-------- e89ff06f          	jal	x0,3e0 <t1b_path_planner.c.838ff56c+0x1e4>
     ###             rev_path[lol]=a;
 55c:	|  |           |  \-------> 00e52023          	sw	x14,0(x10)
     ###             a=path_to[a];lol++;
 560:	|  |           |            00271713          	slli	x14,x14,0x2
 564:	|  |           |            00e40733          	add	x14,x8,x14
 568:	|  |           |            f6872703          	lw	x14,-152(x14)
 56c:	|  |           |            00168693          	addi	x13,x13,1
 570:	|  |           |            00450513          	addi	x10,x10,4
 574:	|  |           \----------- f7dff06f          	jal	x0,4f0 <t1b_path_planner.c.838ff56c+0x2f4>
     ###         NODE_POINT = path_planned[i];
 578:	|  \----------------------> 00d785b3          	add	x11,x15,x13
 57c:	|                           0005c583          	lbu	x11,0(x11)
     ###     for (int i = 0; i < idx; ++i) {
 580:	|                           00168693          	addi	x13,x13,1
     ###         NODE_POINT = path_planned[i];
 584:	|                           00b60423          	sb	x11,8(x12) # fffff008 <__global_pointer$+0xfdffe808>
     ###     for (int i = 0; i < idx; ++i) {
 588:	\-------------------------- b51ff06f          	jal	x0,d8 <main+0x84>

0000058c <_set_tls>:
 58c:	00050213          	addi	x4,x10,0
 590:	00008067          	jalr	x0,0(x1)

00000594 <memcpy>:
 594:	       00050313          	addi	x6,x10,0
 598:	/----- 00060e63          	beq	x12,x0,5b4 <memcpy+0x20>
 59c:	|  /-> 00058383          	lb	x7,0(x11)
 5a0:	|  |   00730023          	sb	x7,0(x6)
 5a4:	|  |   fff60613          	addi	x12,x12,-1
 5a8:	|  |   00130313          	addi	x6,x6,1
 5ac:	|  |   00158593          	addi	x11,x11,1
 5b0:	|  \-- fe0616e3          	bne	x12,x0,59c <memcpy+0x8>
 5b4:	\----> 00008067          	jalr	x0,0(x1)

000005b8 <memset>:
 5b8:	       00050313          	addi	x6,x10,0
 5bc:	/----- 00060a63          	beq	x12,x0,5d0 <memset+0x18>
 5c0:	|  /-> 00b30023          	sb	x11,0(x6)
 5c4:	|  |   fff60613          	addi	x12,x12,-1
 5c8:	|  |   00130313          	addi	x6,x6,1
 5cc:	|  \-- fe061ae3          	bne	x12,x0,5c0 <memset+0x8>
 5d0:	\----> 00008067          	jalr	x0,0(x1)

000005d4 <__text_end>:
 5d4:	0000                	c.unimp
	...
